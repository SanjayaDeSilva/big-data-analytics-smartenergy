/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.59
 * Generated at: 2016-09-01 09:09:22 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.eventsimulator;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import org.wso2.carbon.event.simulator.stub.EventSimulatorAdminServiceStub;
import org.wso2.carbon.event.simulator.ui.EventSimulatorUIUtils;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/tlds/carbontags.tld", Long.valueOf(1449843356000L));
    _jspx_dependants.put("/WEB-INF/tlds/fmt.tld", Long.valueOf(1449843356000L));
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ffmt_005fbundle_0026_005fbasename;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fcarbon_005fbreadcrumb_0026_005ftopPage_005fresourceBundle_005frequest_005flabel_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005ffmt_005fbundle_0026_005fbasename = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fcarbon_005fbreadcrumb_0026_005ftopPage_005fresourceBundle_005frequest_005flabel_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005ffmt_005fbundle_0026_005fbasename.release();
    _005fjspx_005ftagPool_005fcarbon_005fbreadcrumb_0026_005ftopPage_005fresourceBundle_005frequest_005flabel_005fnobody.release();
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\" src=\"../ajax/js/prototype.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"../admin/js/breadcrumbs.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"../admin/js/cookies.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"../admin/js/main.js\"></script>\n");
      out.write("<script type=\"text/javascript\" src=\"../admin/js/main.js\"></script>\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\"\n");
      out.write("        src=\"js/eventstreamProperty_load.js\"></script>\n");
      out.write("<script type=\"text/javascript\"\n");
      out.write("        src=\"js/stream_configuration.js\"></script>\n");
      out.write("<script type=\"text/javascript\"\n");
      out.write("        src=\"js/sendFileDetail.js\"></script>\n");
      out.write("<script type=\"text/javascript\"\n");
      out.write("        src=\"js/sendDBConfigFileDetails.js\"></script>\n");
      out.write("<link type=\"text/css\" href=\"css/eventSimulator.css\" rel=\"stylesheet\"/>\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../dialog/display_messages.jsp", out, false);
      out.write('\n');
      out.write('\n');

    EventSimulatorAdminServiceStub stub = EventSimulatorUIUtils.getEventSimulatorAdminService(config, session, request);

    org.wso2.carbon.event.simulator.stub.types.StreamDefinitionInfoDto[] eventInfoArray = stub.getAllEventStreamInfoDto();

    org.wso2.carbon.event.simulator.stub.types.CSVFileInfoDto[] csvFileInfoDtosArray = stub.getAllCSVFileInfo();
    org.wso2.carbon.event.simulator.stub.types.DataSourceTableAndStreamInfoDto[] dataSourceTableAndStreamInfoDtoArray
            = stub.getAllDataSourceTableAndStreamInfo();

    String streamId = null;
    if (null != request.getParameter("streamId")) {
        streamId = request.getParameter("streamId");
    }


      out.write("\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("    jQuery(document).ready(function () {\n");
      out.write("        document.getElementById(\"fileArea\").style.display = \"inline\";\n");
      out.write("        document.getElementById(\"dataSourceArea\").style.display = \"none\";\n");
      out.write("    });\n");
      out.write("    function changeView(view) {\n");
      out.write("        var plain = \"fileArea\";\n");
      out.write("        if (plain.localeCompare(view) == 0) {\n");
      out.write("            document.getElementById(\"fileArea\").style.display = \"none\";\n");
      out.write("            document.getElementById(\"dataSourceArea\").style.display = \"inline\";\n");
      out.write("        } else {\n");
      out.write("            document.getElementById(\"dataSourceArea\").style.display = \"none\";\n");
      out.write("            document.getElementById(\"fileArea\").style.display = \"inline\";\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("\n");
      out.write("    function saveDataSourceConfiguration() {\n");
      out.write("        var selectDataSourceId = document.getElementById(\"dataSourceTypeID\");\n");
      out.write("        if (selectDataSourceId.options[selectDataSourceId.selectedIndex ].value.localeCompare(\"RDBMS\") == 0) {\n");
      out.write("            saveDBConfiguration(\"RDBMS\");\n");
      out.write("        } else {\n");
      out.write("            saveDBConfiguration(\"Cassandra\");\n");
      out.write("        }\n");
      out.write("\n");
      out.write("    }\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("\n");
      out.write("    function testConnection() {\n");
      out.write("        var selectDataSourceId = document.getElementById(\"dataSourceTypeID\");\n");
      out.write("        if (selectDataSourceId.options[selectDataSourceId.selectedIndex ].value.localeCompare(\"RDBMS\") == 0) {\n");
      out.write("            testRDBMConnection(\"RDBMS\");\n");
      out.write("        } else {\n");
      out.write("            testRDBMConnection(\"Cassandra\");\n");
      out.write("        }\n");
      out.write("\n");
      out.write("    }\n");
      out.write("</script>\n");
      out.write("\n");
      //  fmt:bundle
      org.apache.taglibs.standard.tag.rt.fmt.BundleTag _jspx_th_fmt_005fbundle_005f0 = (org.apache.taglibs.standard.tag.rt.fmt.BundleTag) _005fjspx_005ftagPool_005ffmt_005fbundle_0026_005fbasename.get(org.apache.taglibs.standard.tag.rt.fmt.BundleTag.class);
      _jspx_th_fmt_005fbundle_005f0.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fbundle_005f0.setParent(null);
      // /eventsimulator/index.jsp(101,0) name = basename type = null reqTime = true required = true fragment = false deferredValue = false deferredMethod = false expectedTypeName = null methodSignature = null 
      _jspx_th_fmt_005fbundle_005f0.setBasename("org.wso2.carbon.event.simulator.ui.i18n.Resources");
      int _jspx_eval_fmt_005fbundle_005f0 = _jspx_th_fmt_005fbundle_005f0.doStartTag();
      if (_jspx_eval_fmt_005fbundle_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        if (_jspx_eval_fmt_005fbundle_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
          out = _jspx_page_context.pushBody();
          _jspx_th_fmt_005fbundle_005f0.setBodyContent((javax.servlet.jsp.tagext.BodyContent) out);
          _jspx_th_fmt_005fbundle_005f0.doInitBody();
        }
        do {
          out.write('\n');
          //  carbon:breadcrumb
          org.wso2.carbon.ui.taglibs.Breadcrumb _jspx_th_carbon_005fbreadcrumb_005f0 = (org.wso2.carbon.ui.taglibs.Breadcrumb) _005fjspx_005ftagPool_005fcarbon_005fbreadcrumb_0026_005ftopPage_005fresourceBundle_005frequest_005flabel_005fnobody.get(org.wso2.carbon.ui.taglibs.Breadcrumb.class);
          _jspx_th_carbon_005fbreadcrumb_005f0.setPageContext(_jspx_page_context);
          _jspx_th_carbon_005fbreadcrumb_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
          // /eventsimulator/index.jsp(102,0) name = label type = null reqTime = true required = false fragment = false deferredValue = false deferredMethod = false expectedTypeName = null methodSignature = null 
          _jspx_th_carbon_005fbreadcrumb_005f0.setLabel("eventformatter.list");
          // /eventsimulator/index.jsp(102,0) name = resourceBundle type = null reqTime = true required = false fragment = false deferredValue = false deferredMethod = false expectedTypeName = null methodSignature = null 
          _jspx_th_carbon_005fbreadcrumb_005f0.setResourceBundle("org.wso2.carbon.event.simulator.ui.i18n.Resources");
          // /eventsimulator/index.jsp(102,0) name = topPage type = null reqTime = true required = true fragment = false deferredValue = false deferredMethod = false expectedTypeName = null methodSignature = null 
          _jspx_th_carbon_005fbreadcrumb_005f0.setTopPage(false);
          // /eventsimulator/index.jsp(102,0) name = request type = null reqTime = true required = true fragment = false deferredValue = false deferredMethod = false expectedTypeName = null methodSignature = null 
          _jspx_th_carbon_005fbreadcrumb_005f0.setRequest(request);
          int _jspx_eval_carbon_005fbreadcrumb_005f0 = _jspx_th_carbon_005fbreadcrumb_005f0.doStartTag();
          if (_jspx_th_carbon_005fbreadcrumb_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
            _005fjspx_005ftagPool_005fcarbon_005fbreadcrumb_0026_005ftopPage_005fresourceBundle_005frequest_005flabel_005fnobody.reuse(_jspx_th_carbon_005fbreadcrumb_005f0);
            return;
          }
          _005fjspx_005ftagPool_005fcarbon_005fbreadcrumb_0026_005ftopPage_005fresourceBundle_005frequest_005flabel_005fnobody.reuse(_jspx_th_carbon_005fbreadcrumb_005f0);
          out.write("\n");
          out.write("<div id=\"custom_dcontainer\" style=\"display:none\"></div>\n");
          out.write("\n");
          out.write("<div id=\"middle\">\n");
          out.write("<div id=\"workArea\">\n");
          out.write("<h2>");
          if (_jspx_meth_fmt_005fmessage_005f0(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</h2>\n");
          out.write("<br>\n");
          out.write("\n");
          out.write("<h4 style=\"color: #0D4d79\">");
          if (_jspx_meth_fmt_005fmessage_005f1(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</h4>\n");
          out.write("\n");
          out.write("<div id=\"dataArea\" style=\"display: inline;\">\n");
          out.write("    <form name=\"eventStreams\" id=\"eventStreams\" method=\"post\">\n");
          out.write("        <table id=\"eventStreamtable\" class=\"styledLeft\">\n");
          out.write("            <thead>\n");
          out.write("            <tr>\n");
          out.write("                <th></th>\n");
          out.write("            </tr>\n");
          out.write("            </thead>\n");
          out.write("            <tbody>\n");
          out.write("            <tr>\n");
          out.write("                <td class=\"formRow\">\n");
          out.write("                    <table id=\"inputEventDetailTable\" class=\"normal-nopadding\">\n");
          out.write("                        <tbody>\n");
          out.write("                        <tr>\n");
          out.write("                            <td class=\"leftCol-med\">");
          if (_jspx_meth_fmt_005fmessage_005f2(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("\n");
          out.write("                                <span class=\"required\">*</span>\n");
          out.write("                            </td>\n");
          out.write("                            <td>\n");
          out.write("                                <select name=\"EventStreamID\" id=\"EventStreamID\" onload=\"showEventProperties()\"\n");
          out.write("                                        onchange=\"showEventProperties()\">\n");
          out.write("\n");
          out.write("                                    ");

                                        if (eventInfoArray == null) {
                                    
          out.write("\n");
          out.write("\n");
          out.write("                                    <option value=\"No Event Stream Definitions\">\n");
          out.write("                                        ");
          if (_jspx_meth_fmt_005fmessage_005f3(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("\n");
          out.write("                                    </option>\n");
          out.write("                                    ");

                                    } else {
          out.write("\n");
          out.write("\n");
          out.write("                                    <option value=\"select\">select event stream\n");
          out.write("                                    </option>\n");
          out.write("\n");
          out.write("                                    ");

                                        for (int i = 0; i < eventInfoArray.length; i++) {
                                            String streamName = eventInfoArray[i].getStreamName();
                                            String streamVersion = eventInfoArray[i].getStreamVersion();
                                            if ((streamName + ":" + streamVersion).equalsIgnoreCase(streamId)) {
                                    
          out.write("\n");
          out.write("                                    <option value=\"");
          out.print(eventInfoArray[i].getStreamName());
          out.write("\" selected>\n");
          out.write("                                        ");
          out.print(streamName + ":" + streamVersion);
          out.write("\n");
          out.write("                                    </option>\n");
          out.write("                                    ");
} else {
          out.write("\n");
          out.write("                                    <option value=\"");
          out.print(eventInfoArray[i].getStreamName());
          out.write("\">\n");
          out.write("                                        ");
          out.print(streamName + ":" + streamVersion);
          out.write("\n");
          out.write("                                    </option>\n");
          out.write("                                    ");

                                            }
                                        }
                                        if (!"".equalsIgnoreCase(streamId)) {
                                    
          out.write("\n");
          out.write("                                    <script>\n");
          out.write("                                        showEventProperties();\n");
          out.write("                                    </script>\n");
          out.write("                                    ");

                                            }
                                        }
                                    
          out.write("\n");
          out.write("                                </select>\n");
          out.write("                            </td>\n");
          out.write("                        </tr>\n");
          out.write("                        </tbody>\n");
          out.write("                    </table>\n");
          out.write("                </td>\n");
          out.write("            </tr>\n");
          out.write("            <tr>\n");
          out.write("                <td class=\"buttonRow\">\n");
          out.write("                    <input type=\"button\" value=\"Send\"\n");
          out.write("                           onclick=\"sendEvent(document.getElementById('eventStreams'))\"/>\n");
          out.write("                    <input id=\"btnClear\" type=\"button\" value=\"Clear\"/>\n");
          out.write("                </td>\n");
          out.write("            </tr>\n");
          out.write("            </tbody>\n");
          out.write("        </table>\n");
          out.write("\n");
          out.write("    </form>\n");
          out.write("\n");
          out.write("</div>\n");
          out.write("\n");
          out.write("<br/>\n");
          out.write("<h4 style=\"color: #0D4d79\">");
          if (_jspx_meth_fmt_005fmessage_005f4(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("\n");
          out.write("</h4>\n");
          out.write("\n");
          out.write("\n");
          out.write("<div id=\"fileArea\">\n");
          out.write("    <form name=\"csvFileForm\" id=\"csvFileForm\" method=\"post\" action=\"../../fileupload/csv\" enctype=\"multipart/form-data\"\n");
          out.write("          target=\"_self\">\n");
          out.write("\n");
          out.write("        <table class=\"styledLeft\">\n");
          out.write("            <thead>\n");
          out.write("            <tr>\n");
          out.write("                <th colspan=\"4\" class=\"middle-header\">\n");
          out.write("                                            <span\n");
          out.write("                                                    style=\"float: left; position: relative; margin-top: 2px;\">\n");
          out.write("                                                    ");
          if (_jspx_meth_fmt_005fmessage_005f5(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("\n");
          out.write("                                            </span>\n");
          out.write("                    <a href=\"#\" onclick=\"changeView('fileArea');\" class=\"icon-link\"\n");
          out.write("                       style=\"background-image: url(images/design-view.gif); font-weight: normal\">\n");
          out.write("                        switch to configure database for simulation</a>\n");
          out.write("                </th>\n");
          out.write("            </tr>\n");
          out.write("            <tr>\n");
          out.write("                <th>");
          if (_jspx_meth_fmt_005fmessage_005f6(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</th>\n");
          out.write("                <th>");
          if (_jspx_meth_fmt_005fmessage_005f7(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</th>\n");
          out.write("                <th>");
          if (_jspx_meth_fmt_005fmessage_005f8(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</th>\n");
          out.write("                <th>");
          if (_jspx_meth_fmt_005fmessage_005f9(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</th>\n");
          out.write("            </tr>\n");
          out.write("            </thead>\n");
          out.write("            <tbody>\n");
          out.write("            ");
if (csvFileInfoDtosArray == null) {
          out.write("\n");
          out.write("            <tr>\n");
          out.write("                <td>");
          if (_jspx_meth_fmt_005fmessage_005f10(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</td>\n");
          out.write("                <td></td>\n");
          out.write("                <td></td>\n");
          out.write("                <td></td>\n");
          out.write("            </tr>\n");
          out.write("            ");

            } else {
                for (int k = 0; k < csvFileInfoDtosArray.length; k++) {
            
          out.write("\n");
          out.write("\n");
          out.write("            <tr>\n");
          out.write("                <td><strong>");
          out.print(csvFileInfoDtosArray[k].getFileName());
          out.write("\n");
          out.write("                </strong></td>\n");
          out.write("\n");
          out.write("                ");
 if (csvFileInfoDtosArray[k].getStreamID() != null) {
          out.write("\n");
          out.write("                <td>");
          out.print(csvFileInfoDtosArray[k].getStreamID());
          out.write("\n");
          out.write("                </td>\n");
          out.write("                ");

                } else {
                
          out.write("\n");
          out.write("                <td>\n");
          out.write("                    ");
          if (_jspx_meth_fmt_005fmessage_005f11(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("\n");
          out.write("                </td>\n");
          out.write("                ");
}
          out.write("\n");
          out.write("\n");
          out.write("                ");
 if (csvFileInfoDtosArray[k].getDelayBetweenEventsInMillis() != 0) {
          out.write("\n");
          out.write("                <td>");
          out.print(csvFileInfoDtosArray[k].getDelayBetweenEventsInMillis());
          out.write("\n");
          out.write("                </td>\n");
          out.write("                ");

                } else {
                
          out.write("\n");
          out.write("                <td>\n");
          out.write("                    ");
          if (_jspx_meth_fmt_005fmessage_005f12(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("\n");
          out.write("                </td>\n");
          out.write("                ");
}
          out.write("\n");
          out.write("\n");
          out.write("                <td>\n");
          out.write("                    ");
if (csvFileInfoDtosArray[k].getStreamID() != null && csvFileInfoDtosArray[k].getStatus().equalsIgnoreCase("STOPPED")) {
          out.write("\n");
          out.write("                    <span id=\"fileSimulationPlay");
          out.print( csvFileInfoDtosArray[k].getFileName());
          out.write("\" >\n");
          out.write("                        <input type=\"button\" value=\"Play\" onclick=\"sendFileDetails(\n");
          out.write("                                '");
          out.print(csvFileInfoDtosArray[k].getFileName());
          out.write("')\">\n");
          out.write("                    </span>\n");
          out.write("                    <span id=\"fileSimulationPause");
          out.print( csvFileInfoDtosArray[k].getFileName());
          out.write("\" style=\"display:none;\">\n");
          out.write("                        <input type=\"button\" value=\"Pause\" onclick=\"pauseEventsViaFile(\n");
          out.write("                                '");
          out.print(csvFileInfoDtosArray[k].getFileName());
          out.write("')\">\n");
          out.write("                    </span>\n");
          out.write("                    <span id=\"fileSimulationResume");
          out.print( csvFileInfoDtosArray[k].getFileName());
          out.write("\" style=\"display:none;\">\n");
          out.write("                        <input type=\"button\" value=\"Resume\" onclick=\"resumeEventsViaFile(\n");
          out.write("                                '");
          out.print(csvFileInfoDtosArray[k].getFileName());
          out.write("')\">\n");
          out.write("                    </span>\n");
          out.write("                    <span id=\"fileSimulationStop");
          out.print( csvFileInfoDtosArray[k].getFileName());
          out.write("\" style=\"display:none;\">\n");
          out.write("                        <input type=\"button\" value=\"Stop\" onclick=\"stopEventsViaFile(\n");
          out.write("                                '");
          out.print(csvFileInfoDtosArray[k].getFileName());
          out.write("')\">\n");
          out.write("                    </span>\n");
          out.write("                    ");
}
          out.write("\n");
          out.write("\n");
          out.write("                    ");
if (csvFileInfoDtosArray[k].getStreamID() != null && (csvFileInfoDtosArray[k].getStatus().equalsIgnoreCase("STARTED") || csvFileInfoDtosArray[k].getStatus().equalsIgnoreCase("RESUMED"))) {
          out.write("\n");
          out.write("                    <span id=\"fileSimulationPlay");
          out.print( csvFileInfoDtosArray[k].getFileName());
          out.write("\" style=\"display:none;\">\n");
          out.write("                        <input type=\"button\" value=\"Play\" onclick=\"sendFileDetails(\n");
          out.write("                                '");
          out.print(csvFileInfoDtosArray[k].getFileName());
          out.write("')\">\n");
          out.write("                    </span\n");
          out.write("                            >\n");
          out.write("                    <span id=\"fileSimulationPause");
          out.print( csvFileInfoDtosArray[k].getFileName());
          out.write("\" >\n");
          out.write("                        <input type=\"button\" value=\"Pause\" onclick=\"pauseEventsViaFile(\n");
          out.write("                                '");
          out.print(csvFileInfoDtosArray[k].getFileName());
          out.write("')\">\n");
          out.write("                    </span>\n");
          out.write("                    <span id=\"fileSimulationResume");
          out.print( csvFileInfoDtosArray[k].getFileName());
          out.write("\" style=\"display:none;\">\n");
          out.write("                        <input type=\"button\" value=\"Resume\" onclick=\"resumeEventsViaFile(\n");
          out.write("                                '");
          out.print(csvFileInfoDtosArray[k].getFileName());
          out.write("')\">\n");
          out.write("                    </span>\n");
          out.write("                    <span id=\"fileSimulationStop");
          out.print( csvFileInfoDtosArray[k].getFileName());
          out.write("\" >\n");
          out.write("                        <input type=\"button\" value=\"Stop\" onclick=\"stopEventsViaFile(\n");
          out.write("                                '");
          out.print(csvFileInfoDtosArray[k].getFileName());
          out.write("')\">\n");
          out.write("                    </span>\n");
          out.write("                    ");
}
          out.write("\n");
          out.write("\n");
          out.write("                    ");
if (csvFileInfoDtosArray[k].getStreamID() != null && csvFileInfoDtosArray[k].getStatus().equalsIgnoreCase("PAUSED")) {
          out.write("\n");
          out.write("                    <span id=\"fileSimulationPlay");
          out.print( csvFileInfoDtosArray[k].getFileName());
          out.write("\" style=\"display:none;\">\n");
          out.write("                        <input type=\"button\" value=\"Play\" onclick=\"sendFileDetails(\n");
          out.write("                                '");
          out.print(csvFileInfoDtosArray[k].getFileName());
          out.write("')\">\n");
          out.write("                    </span>\n");
          out.write("                    <span id=\"fileSimulationPause");
          out.print( csvFileInfoDtosArray[k].getFileName());
          out.write("\" style=\"display:none;\">\n");
          out.write("                        <input type=\"button\" value=\"Pause\" onclick=\"pauseEventsViaFile(\n");
          out.write("                                '");
          out.print(csvFileInfoDtosArray[k].getFileName());
          out.write("')\">\n");
          out.write("                    </span>\n");
          out.write("                    <span id=\"fileSimulationResume");
          out.print( csvFileInfoDtosArray[k].getFileName());
          out.write("\" >\n");
          out.write("                        <input type=\"button\" value=\"Resume\" onclick=\"resumeEventsViaFile(\n");
          out.write("                                '");
          out.print(csvFileInfoDtosArray[k].getFileName());
          out.write("')\">\n");
          out.write("                    </span>\n");
          out.write("                    <span id=\"fileSimulationStop");
          out.print( csvFileInfoDtosArray[k].getFileName());
          out.write("\" >\n");
          out.write("                        <input type=\"button\" value=\"Stop\" onclick=\"stopEventsViaFile(\n");
          out.write("                                '");
          out.print(csvFileInfoDtosArray[k].getFileName());
          out.write("')\">\n");
          out.write("                    </span>\n");
          out.write("                    ");
}
          out.write("\n");
          out.write("                    <input type=\"button\" value=\"Configure\" onclick=\"createPopupStreamConfigUI(\n");
          out.write("                            '");
          out.print(csvFileInfoDtosArray[k].getFileName());
          out.write("')\">\n");
          out.write("                    <input type=\"button\" value=\"Delete\" onclick=\"deleteFile(\n");
          out.write("                            '");
          out.print(csvFileInfoDtosArray[k].getFileName());
          out.write("')\">\n");
          out.write("                </td>\n");
          out.write("            </tr>\n");
          out.write("            ");

                    }
                }

            
          out.write("\n");
          out.write("\n");
          out.write("            </tbody>\n");
          out.write("\n");
          out.write("            <tr>\n");
          out.write("                <td class=\"buttonRow\" colspan=\"4\">\n");
          out.write("                    <input type=\"file\" name=\"csvFileName\" id=\"csvFile\" size=\"50\"/>\n");
          out.write("                    <input name=\"upload\" class=\"button registryWriteOperation\" type=\"button\"\n");
          out.write("                           value=\"upload\" onclick=\"validateUpload()\"/>\n");
          out.write("                </td>\n");
          out.write("            </tr>\n");
          out.write("        </table>\n");
          out.write("    </form>\n");
          out.write("</div>\n");
          out.write("<div id=\"dataSourceArea\">\n");
          out.write("\n");
          out.write("<form name=\"inputFormDB\" action=\"#\" method=\"post\" id=\"inputFormDB\">\n");
          out.write("<table class=\"styledLeft noBorders\" cellspacing=\"0\" cellpadding=\"0\" border=\"0\" style=\"border-bottom:1px solid #cccccc\">\n");
          out.write("<thead>\n");
          out.write("\n");
          out.write("<tr>\n");
          out.write("    <th colspan=\"3\" class=\"middle-header\">\n");
          out.write("                                                <span\n");
          out.write("                                                        style=\"float: left; position: relative; margin-top: 2px;\">\n");
          out.write("                                                        ");
          if (_jspx_meth_fmt_005fmessage_005f13(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("\n");
          out.write("                                                </span>\n");
          out.write("        <a href=\"#\" onclick=\"changeView('dataSourceArea');\" class=\"icon-link\"\n");
          out.write("           style=\"background-image: url(images/design-view.gif); font-weight: normal\">\n");
          out.write("            switch to upload file for simulation</a>\n");
          out.write("    </th>\n");
          out.write("</tr>\n");
          out.write("</thead>\n");
          out.write("<tbody>\n");
          out.write("<tr>\n");
          out.write("    <td colspan=\"3\">\n");
          out.write("        <table class=\"styledLeft\" id=\"dataSourceConfigInfoTableID\" cellspacing=\"0\"\n");
          out.write("               cellpadding=\"0\" style=\"border-bottom:none\">\n");
          out.write("            <thead>\n");
          out.write("            <tr>\n");
          out.write("                <th>");
          if (_jspx_meth_fmt_005fmessage_005f14(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</th>\n");
          out.write("                <th>");
          if (_jspx_meth_fmt_005fmessage_005f15(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</th>\n");
          out.write("                <th>");
          if (_jspx_meth_fmt_005fmessage_005f16(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</th>\n");
          out.write("                <th>");
          if (_jspx_meth_fmt_005fmessage_005f17(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</th>\n");
          out.write("                <th>");
          if (_jspx_meth_fmt_005fmessage_005f18(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</th>\n");
          out.write("                <th>");
          if (_jspx_meth_fmt_005fmessage_005f19(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</th>\n");
          out.write("                <th>");
          if (_jspx_meth_fmt_005fmessage_005f20(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</th>\n");
          out.write("                <th>");
          if (_jspx_meth_fmt_005fmessage_005f21(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</th>\n");
          out.write("            </tr>\n");
          out.write("            </thead>\n");
          out.write("            <tbody>\n");
          out.write("            ");
if (dataSourceTableAndStreamInfoDtoArray == null) {
          out.write("\n");
          out.write("            <tr>\n");
          out.write("                <td>");
          if (_jspx_meth_fmt_005fmessage_005f22(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("</td>\n");
          out.write("                <td></td>\n");
          out.write("                <td></td>\n");
          out.write("                <td></td>\n");
          out.write("                <td></td>\n");
          out.write("                <td></td>\n");
          out.write("                <td></td>\n");
          out.write("                <td></td>\n");
          out.write("            </tr>\n");
          out.write("            ");

            } else {
                for (int k = 0; k < dataSourceTableAndStreamInfoDtoArray.length; k++) {
            
          out.write("\n");
          out.write("\n");
          out.write("            <tr>\n");
          out.write("\n");
          out.write("                <td>");
          out.print(dataSourceTableAndStreamInfoDtoArray[k].getConfigurationName());
          out.write("\n");
          out.write("                </td>\n");
          out.write("                <td>");
          out.print(dataSourceTableAndStreamInfoDtoArray[k].getDataSourceName());
          out.write("\n");
          out.write("                </td>\n");
          out.write("                <td>");
          out.print(dataSourceTableAndStreamInfoDtoArray[k].getTableName());
          out.write("\n");
          out.write("                </td>\n");
          out.write("                ");

                    String columns = "", streamAttributes = "";

                    boolean addedFirstColumn = false;
                    boolean addedFirstAttribute = false;
                    String[] columnArray = dataSourceTableAndStreamInfoDtoArray[k].getColumnNames();
                    String[] streamAttributesArray = dataSourceTableAndStreamInfoDtoArray[k].getStreamAttributeNames();

                    for (int i = 0; i < columnArray.length; i++) {
                        if (addedFirstColumn) {
                            columns = columns + ",";
                            if ((i != 0) && (i % 3 == 0)) {
                                columns = columns + "\n";
                            }
                        }
                        if (addedFirstAttribute) {
                            streamAttributes = streamAttributes + ",";
                            if ((i != 0) && (i % 3 == 0)) {
                                streamAttributes = streamAttributes + "\n";
                            }
                        }
                        addedFirstColumn = true;
                        addedFirstAttribute = true;
                        columns = columns + columnArray[i];
                        streamAttributes = streamAttributes + streamAttributesArray[i];
                    }
                
          out.write("\n");
          out.write("                <td>");
          out.print(columns);
          out.write("\n");
          out.write("                </td>\n");
          out.write("                <td>");
          out.print(dataSourceTableAndStreamInfoDtoArray[k].getEventStreamID());
          out.write("\n");
          out.write("                </td>\n");
          out.write("                <td>");
          out.print(streamAttributes);
          out.write("\n");
          out.write("                </td>\n");
          out.write("                <td>");
          out.print(dataSourceTableAndStreamInfoDtoArray[k].getDelayBetweenEventsInMillis());
          out.write("\n");
          out.write("                </td>\n");
          out.write("\n");
          out.write("                <td>\n");
          out.write("\n");
          out.write("                    ");
if (dataSourceTableAndStreamInfoDtoArray[k].getStatus().equalsIgnoreCase("STOPPED")) {
          out.write("\n");
          out.write("                    <span id=\"dbSimulationPlay");
          out.print( dataSourceTableAndStreamInfoDtoArray[k].getFileName());
          out.write("\" >\n");
          out.write("                        <input type=\"button\" value=\"Play\" onclick=\"sendDBConfigFileNameToSimulate(\n");
          out.write("                                '");
          out.print(dataSourceTableAndStreamInfoDtoArray[k].getFileName());
          out.write("')\">\n");
          out.write("                    </span>\n");
          out.write("                    <span id=\"dbSimulationPause");
          out.print( dataSourceTableAndStreamInfoDtoArray[k].getFileName());
          out.write("\" style=\"display:none;\">\n");
          out.write("                        <input type=\"button\" value=\"Pause\" onclick=\"pauseDBConfigFileNameToSimulate(\n");
          out.write("                                '");
          out.print(dataSourceTableAndStreamInfoDtoArray[k].getFileName());
          out.write("')\">\n");
          out.write("                    </span>\n");
          out.write("                    <span id=\"dbSimulationResume");
          out.print( dataSourceTableAndStreamInfoDtoArray[k].getFileName());
          out.write("\" style=\"display:none;\">\n");
          out.write("                        <input type=\"button\" value=\"Resume\" onclick=\"resumeDBConfigFileNameToSimulate(\n");
          out.write("                                '");
          out.print(dataSourceTableAndStreamInfoDtoArray[k].getFileName());
          out.write("')\">\n");
          out.write("                    </span>\n");
          out.write("                    <span id=\"dbSimulationStop");
          out.print( dataSourceTableAndStreamInfoDtoArray[k].getFileName());
          out.write("\" style=\"display:none;\">\n");
          out.write("                        <input type=\"button\" value=\"Stop\" onclick=\"stopDBConfigFileNameToSimulate(\n");
          out.write("                                '");
          out.print(dataSourceTableAndStreamInfoDtoArray[k].getFileName());
          out.write("')\">\n");
          out.write("                    </span>\n");
          out.write("                    ");
}
          out.write("\n");
          out.write("\n");
          out.write("                    ");
if ((dataSourceTableAndStreamInfoDtoArray[k].getStatus().equalsIgnoreCase("STARTED") || dataSourceTableAndStreamInfoDtoArray[k].getStatus().equalsIgnoreCase("RESUMED"))) {
          out.write("\n");
          out.write("                    <span id=\"dbSimulationPlay");
          out.print( dataSourceTableAndStreamInfoDtoArray[k].getFileName());
          out.write("\" style=\"display:none;\">\n");
          out.write("                        <input type=\"button\" value=\"Play\" onclick=\"sendDBConfigFileNameToSimulate(\n");
          out.write("                                '");
          out.print(dataSourceTableAndStreamInfoDtoArray[k].getFileName());
          out.write("')\">\n");
          out.write("                    </span\n");
          out.write("                            >\n");
          out.write("                    <span id=\"dbSimulationPause");
          out.print( dataSourceTableAndStreamInfoDtoArray[k].getFileName());
          out.write("\" >\n");
          out.write("                        <input type=\"button\" value=\"Pause\" onclick=\"pauseDBConfigFileNameToSimulate(\n");
          out.write("                                '");
          out.print(dataSourceTableAndStreamInfoDtoArray[k].getFileName());
          out.write("')\">\n");
          out.write("                    </span>\n");
          out.write("                    <span id=\"dbSimulationResume");
          out.print( dataSourceTableAndStreamInfoDtoArray[k].getFileName());
          out.write("\" style=\"display:none;\">\n");
          out.write("                        <input type=\"button\" value=\"Resume\" onclick=\"resumeDBConfigFileNameToSimulate(\n");
          out.write("                                '");
          out.print(dataSourceTableAndStreamInfoDtoArray[k].getFileName());
          out.write("')\">\n");
          out.write("                    </span>\n");
          out.write("                    <span id=\"dbSimulationStop");
          out.print( dataSourceTableAndStreamInfoDtoArray[k].getFileName());
          out.write("\" >\n");
          out.write("                        <input type=\"button\" value=\"Stop\" onclick=\"stopDBConfigFileNameToSimulate(\n");
          out.write("                                '");
          out.print(dataSourceTableAndStreamInfoDtoArray[k].getFileName());
          out.write("')\">\n");
          out.write("                    </span>\n");
          out.write("                    ");
}
          out.write("\n");
          out.write("\n");
          out.write("                    ");
if (dataSourceTableAndStreamInfoDtoArray[k].getStatus().equalsIgnoreCase("PAUSED")) {
          out.write("\n");
          out.write("                    <span id=\"dbSimulationPlay");
          out.print( dataSourceTableAndStreamInfoDtoArray[k].getFileName());
          out.write("\" style=\"display:none;\">\n");
          out.write("                        <input type=\"button\" value=\"Play\" onclick=\"sendDBConfigFileNameToSimulate(\n");
          out.write("                                '");
          out.print(dataSourceTableAndStreamInfoDtoArray[k].getFileName());
          out.write("')\">\n");
          out.write("                    </span>\n");
          out.write("                    <span id=\"dbSimulationPause");
          out.print( dataSourceTableAndStreamInfoDtoArray[k].getFileName());
          out.write("\" style=\"display:none;\">\n");
          out.write("                        <input type=\"button\" value=\"Pause\" onclick=\"pauseDBConfigFileNameToSimulate(\n");
          out.write("                                '");
          out.print(dataSourceTableAndStreamInfoDtoArray[k].getFileName());
          out.write("')\">\n");
          out.write("                    </span>\n");
          out.write("                    <span id=\"dbSimulationResume");
          out.print( dataSourceTableAndStreamInfoDtoArray[k].getFileName());
          out.write("\" >\n");
          out.write("                        <input type=\"button\" value=\"Resume\" onclick=\"resumeDBConfigFileNameToSimulate(\n");
          out.write("                                '");
          out.print(dataSourceTableAndStreamInfoDtoArray[k].getFileName());
          out.write("')\">\n");
          out.write("                    </span>\n");
          out.write("                    <span id=\"dbSimulationStop");
          out.print( dataSourceTableAndStreamInfoDtoArray[k].getFileName());
          out.write("\" >\n");
          out.write("                        <input type=\"button\" value=\"Stop\" onclick=\"stopDBConfigFileNameToSimulate(\n");
          out.write("                                '");
          out.print(dataSourceTableAndStreamInfoDtoArray[k].getFileName());
          out.write("')\">\n");
          out.write("                    </span>\n");
          out.write("                    ");
}
          out.write("\n");
          out.write("                    <input type=\"button\" value=\"Delete\" onclick=\"deleteDBConfigFile(\n");
          out.write("                            '");
          out.print(dataSourceTableAndStreamInfoDtoArray[k].getFileName());
          out.write("')\">\n");
          out.write("                </td>\n");
          out.write("            </tr>\n");
          out.write("            ");

                    }

                }
            
          out.write("\n");
          out.write("\n");
          out.write("            </tbody>\n");
          out.write("        </table>\n");
          out.write("    </td>\n");
          out.write("</tr>\n");
          out.write("\n");
          out.write("<tr>\n");
          out.write("    <td class=\"formRow\" colspan=\"2\">\n");
          out.write("        <table id=\"inputEventDetailTable3\" class=\"normal-nopadding\" style=\"width:100%\">\n");
          out.write("            <tbody>\n");
          out.write("            <tr>\n");
          out.write("                <td style=\"padding-left:10px\">Configuration Name<span class=\"required\">*</span></td>\n");
          out.write("                <td colspan=\"2\" style=\"padding-left:10px\">\n");
          out.write("                    <div class=\"outputFields\">\n");
          out.write("                        <input style=\"width:75%\" type=\"text\" id=\"configurationNameId2\"\n");
          out.write("                               name=\"configuration.name\" value=\"\" class=\"initE\">\n");
          out.write("                    </div>\n");
          out.write("                </td>\n");
          out.write("            </tr>\n");
          out.write("\n");
          out.write("            <tr>\n");
          out.write("                <td style=\"padding-left:10px\">Data Source Type<span class=\"required\">*</span></td>\n");
          out.write("                <td colspan=\"2\" style=\"padding-left:10px\">\n");
          out.write("                    <select name=\"dataSourceTypeID\" id=\"dataSourceTypeID\">\n");
          out.write("\n");
          out.write("                        <option value=\"RDBMS\">RDBMS\n");
          out.write("                        </option>\n");
          out.write("                    </select>\n");
          out.write("                </td>\n");
          out.write("            </tr>\n");
          out.write("            <tr>\n");
          out.write("                <td style=\"padding-left:10px\">Data Source Name<span class=\"required\">*</span></td>\n");
          out.write("                <td colspan=\"2\" style=\"padding-left:10px\">\n");
          out.write("                    <div class=\"outputFields\">\n");
          out.write("                        <input style=\"width:75%\" type=\"text\" id=\"dataSourceNameId2\"\n");
          out.write("                               name=\"datasource.name\" value=\"\" class=\"initE\">\n");
          out.write("                    </div>\n");
          out.write("                </td>\n");
          out.write("            </tr>\n");
          out.write("\n");
          out.write("            <tr>\n");
          out.write("                <td class=\"leftCol-med\" style=\"padding-left:10px\">Table Name\n");
          out.write("                    <span class=\"required\">*</span>\n");
          out.write("                </td>\n");
          out.write("                <td style=\"padding-left:10px\">\n");
          out.write("                    <div class=\"outputFields\">\n");
          out.write("                        <input type=\"text\" name=\"table.name\" id=\"tableNameId2\" class=\"initE\" style=\"width:75%\" value=\"\">\n");
          out.write("                    </div>\n");
          out.write("                </td>\n");
          out.write("            </tr>\n");
          out.write("\n");
          out.write("            <tr>\n");
          out.write("                <td class=\"leftCol-med\" style=\"padding-left:10px\">Delay between events in milliseconds\n");
          out.write("                    <span class=\"required\">*</span>\n");
          out.write("                </td>\n");
          out.write("                <td style=\"padding-left:10px\">\n");
          out.write("                    <div class=\"outputFields\">\n");
          out.write("                        <input type=\"text\" name=\"table.name\" id=\"eventSendingDelay2\" class=\"initE\" style=\"width:75%\"\n");
          out.write("                               value=\"1000\">\n");
          out.write("                    </div>\n");
          out.write("                </td>\n");
          out.write("            </tr>\n");
          out.write("            </tbody>\n");
          out.write("        </table>\n");
          out.write("    </td>\n");
          out.write("</tr>\n");
          out.write("\n");
          out.write("\n");
          out.write("<tr>\n");
          out.write("    <td class=\"formRow\" colspan=\"2\">\n");
          out.write("        <table id=\"inputEventDetailTable2\" class=\"normal-nopadding\" style=\"width:100%\">\n");
          out.write("            <tbody>\n");
          out.write("            <tr>\n");
          out.write("                <td class=\"leftCol-med\">");
          if (_jspx_meth_fmt_005fmessage_005f23(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write(" <span class=\"required\">*</span>\n");
          out.write("                </td>\n");
          out.write("                <td>\n");
          out.write("                    <select name=\"EventStreamID\" id=\"EventStreamID2\" onload=\"showEventPropertiesForSimulator()\"\n");
          out.write("                            onchange=\"showEventPropertiesForSimulator()\">\n");
          out.write("\n");
          out.write("                        ");

                            if (eventInfoArray == null) {
                        
          out.write("\n");
          out.write("                        <option value=\"No Event Stream Definitions\">");
          if (_jspx_meth_fmt_005fmessage_005f24(_jspx_th_fmt_005fbundle_005f0, _jspx_page_context))
            return;
          out.write("\n");
          out.write("                        </option>\n");
          out.write("                        ");
} else {
          out.write("\n");
          out.write("\n");
          out.write("                        <option value=\"select\">select event stream\n");
          out.write("                        </option>\n");
          out.write("                        ");

                            for (int i = 0; i < eventInfoArray.length; i++) {
                                String streamName = eventInfoArray[i].getStreamName();
                                String streamVersion = eventInfoArray[i].getStreamVersion();
                                if ((streamName + ":" + streamVersion).equalsIgnoreCase(streamId)) {
                        
          out.write("\n");
          out.write("                        <option value=\"");
          out.print(eventInfoArray[i].getStreamName());
          out.write("\" selected>\n");
          out.write("                            ");
          out.print(streamName + ":" + streamVersion);
          out.write("\n");
          out.write("                        </option>\n");
          out.write("                        ");
} else {
          out.write("\n");
          out.write("                        <option value=\"");
          out.print(eventInfoArray[i].getStreamName());
          out.write("\">\n");
          out.write("                            ");
          out.print(streamName + ":" + streamVersion);
          out.write("\n");
          out.write("                        </option>\n");
          out.write("                        ");

                                    }
                                }
                            }
          out.write("\n");
          out.write("                    </select>\n");
          out.write("                </td>\n");
          out.write("            </tr>\n");
          out.write("\n");
          out.write("            </tbody>\n");
          out.write("        </table>\n");
          out.write("    </td>\n");
          out.write("</tr>\n");
          out.write("<tr>\n");
          out.write("    <td class=\"buttonRow formRow\" colspan=\"2\">\n");
          out.write("        <input type=\"button\" value=\"Test Connection\" onclick=\"testConnection()\">\n");
          out.write("        <input type=\"button\" value=\"Save\" onclick=\"saveDataSourceConfiguration()\">\n");
          out.write("    </td>\n");
          out.write("\n");
          out.write("</tr>\n");
          out.write("</tbody>\n");
          out.write("\n");
          out.write("</table>\n");
          out.write("\n");
          out.write("</form>\n");
          out.write("</div>\n");
          out.write("\n");
          out.write("\n");
          out.write("</div>\n");
          out.write("\n");
          out.write("</div>\n");
          int evalDoAfterBody = _jspx_th_fmt_005fbundle_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
        if (_jspx_eval_fmt_005fbundle_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
          out = _jspx_page_context.popBody();
        }
      }
      if (_jspx_th_fmt_005fbundle_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        _005fjspx_005ftagPool_005ffmt_005fbundle_0026_005fbasename.reuse(_jspx_th_fmt_005fbundle_005f0);
        return;
      }
      _005fjspx_005ftagPool_005ffmt_005fbundle_0026_005fbasename.reuse(_jspx_th_fmt_005fbundle_005f0);
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_fmt_005fmessage_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f0 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f0.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /eventsimulator/index.jsp(111,4) name = key type = null reqTime = true required = false fragment = false deferredValue = false deferredMethod = false expectedTypeName = null methodSignature = null 
    _jspx_th_fmt_005fmessage_005f0.setKey("event.stream.simulator");
    int _jspx_eval_fmt_005fmessage_005f0 = _jspx_th_fmt_005fmessage_005f0.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f0);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f0);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f1 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f1.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /eventsimulator/index.jsp(114,27) name = key type = null reqTime = true required = false fragment = false deferredValue = false deferredMethod = false expectedTypeName = null methodSignature = null 
    _jspx_th_fmt_005fmessage_005f1.setKey("send.single.event");
    int _jspx_eval_fmt_005fmessage_005f1 = _jspx_th_fmt_005fmessage_005f1.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f1);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f1);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f2(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f2 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f2.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f2.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /eventsimulator/index.jsp(130,52) name = key type = null reqTime = true required = false fragment = false deferredValue = false deferredMethod = false expectedTypeName = null methodSignature = null 
    _jspx_th_fmt_005fmessage_005f2.setKey("select.the.event.stream");
    int _jspx_eval_fmt_005fmessage_005f2 = _jspx_th_fmt_005fmessage_005f2.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f2.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f2);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f2);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f3(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f3 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f3.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f3.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /eventsimulator/index.jsp(142,40) name = key type = null reqTime = true required = false fragment = false deferredValue = false deferredMethod = false expectedTypeName = null methodSignature = null 
    _jspx_th_fmt_005fmessage_005f3.setKey("no.event.stream.definition");
    int _jspx_eval_fmt_005fmessage_005f3 = _jspx_th_fmt_005fmessage_005f3.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f3.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f3);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f3);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f4(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f4 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f4.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f4.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /eventsimulator/index.jsp(197,27) name = key type = null reqTime = true required = false fragment = false deferredValue = false deferredMethod = false expectedTypeName = null methodSignature = null 
    _jspx_th_fmt_005fmessage_005f4.setKey("send.multiple.events");
    int _jspx_eval_fmt_005fmessage_005f4 = _jspx_th_fmt_005fmessage_005f4.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f4.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f4);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f4);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f5(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f5 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f5.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f5.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /eventsimulator/index.jsp(211,52) name = key type = null reqTime = true required = false fragment = false deferredValue = false deferredMethod = false expectedTypeName = null methodSignature = null 
    _jspx_th_fmt_005fmessage_005f5.setKey("input.by.file");
    int _jspx_eval_fmt_005fmessage_005f5 = _jspx_th_fmt_005fmessage_005f5.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f5.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f5);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f5);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f6(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f6 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f6.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f6.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /eventsimulator/index.jsp(219,20) name = key type = null reqTime = true required = false fragment = false deferredValue = false deferredMethod = false expectedTypeName = null methodSignature = null 
    _jspx_th_fmt_005fmessage_005f6.setKey("file");
    int _jspx_eval_fmt_005fmessage_005f6 = _jspx_th_fmt_005fmessage_005f6.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f6.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f6);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f6);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f7(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f7 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f7.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f7.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /eventsimulator/index.jsp(220,20) name = key type = null reqTime = true required = false fragment = false deferredValue = false deferredMethod = false expectedTypeName = null methodSignature = null 
    _jspx_th_fmt_005fmessage_005f7.setKey("stream.configuration");
    int _jspx_eval_fmt_005fmessage_005f7 = _jspx_th_fmt_005fmessage_005f7.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f7.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f7);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f7);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f8(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f8 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f8.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f8.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /eventsimulator/index.jsp(221,20) name = key type = null reqTime = true required = false fragment = false deferredValue = false deferredMethod = false expectedTypeName = null methodSignature = null 
    _jspx_th_fmt_005fmessage_005f8.setKey("event.delay");
    int _jspx_eval_fmt_005fmessage_005f8 = _jspx_th_fmt_005fmessage_005f8.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f8.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f8);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f8);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f9(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f9 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f9.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f9.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /eventsimulator/index.jsp(222,20) name = key type = null reqTime = true required = false fragment = false deferredValue = false deferredMethod = false expectedTypeName = null methodSignature = null 
    _jspx_th_fmt_005fmessage_005f9.setKey("action");
    int _jspx_eval_fmt_005fmessage_005f9 = _jspx_th_fmt_005fmessage_005f9.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f9.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f9);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f9);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f10(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f10 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f10.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f10.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /eventsimulator/index.jsp(228,20) name = key type = null reqTime = true required = false fragment = false deferredValue = false deferredMethod = false expectedTypeName = null methodSignature = null 
    _jspx_th_fmt_005fmessage_005f10.setKey("no.file.has.been.uploaded");
    int _jspx_eval_fmt_005fmessage_005f10 = _jspx_th_fmt_005fmessage_005f10.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f10.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f10);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f10);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f11(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f11 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f11.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f11.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /eventsimulator/index.jsp(249,20) name = key type = null reqTime = true required = false fragment = false deferredValue = false deferredMethod = false expectedTypeName = null methodSignature = null 
    _jspx_th_fmt_005fmessage_005f11.setKey("click.configuration");
    int _jspx_eval_fmt_005fmessage_005f11 = _jspx_th_fmt_005fmessage_005f11.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f11.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f11);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f11);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f12(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f12 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f12.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f12.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /eventsimulator/index.jsp(260,20) name = key type = null reqTime = true required = false fragment = false deferredValue = false deferredMethod = false expectedTypeName = null methodSignature = null 
    _jspx_th_fmt_005fmessage_005f12.setKey("click.configuration");
    int _jspx_eval_fmt_005fmessage_005f12 = _jspx_th_fmt_005fmessage_005f12.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f12.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f12);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f12);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f13(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f13 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f13.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f13.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /eventsimulator/index.jsp(356,56) name = key type = null reqTime = true required = false fragment = false deferredValue = false deferredMethod = false expectedTypeName = null methodSignature = null 
    _jspx_th_fmt_005fmessage_005f13.setKey("input.by.ds");
    int _jspx_eval_fmt_005fmessage_005f13 = _jspx_th_fmt_005fmessage_005f13.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f13.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f13);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f13);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f14(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f14 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f14.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f14.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /eventsimulator/index.jsp(371,20) name = key type = null reqTime = true required = false fragment = false deferredValue = false deferredMethod = false expectedTypeName = null methodSignature = null 
    _jspx_th_fmt_005fmessage_005f14.setKey("configuration.name");
    int _jspx_eval_fmt_005fmessage_005f14 = _jspx_th_fmt_005fmessage_005f14.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f14.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f14);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f14);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f15(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f15 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f15.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f15.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /eventsimulator/index.jsp(372,20) name = key type = null reqTime = true required = false fragment = false deferredValue = false deferredMethod = false expectedTypeName = null methodSignature = null 
    _jspx_th_fmt_005fmessage_005f15.setKey("data.source.name");
    int _jspx_eval_fmt_005fmessage_005f15 = _jspx_th_fmt_005fmessage_005f15.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f15.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f15);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f15);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f16(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f16 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f16.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f16.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /eventsimulator/index.jsp(373,20) name = key type = null reqTime = true required = false fragment = false deferredValue = false deferredMethod = false expectedTypeName = null methodSignature = null 
    _jspx_th_fmt_005fmessage_005f16.setKey("table.name");
    int _jspx_eval_fmt_005fmessage_005f16 = _jspx_th_fmt_005fmessage_005f16.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f16.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f16);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f16);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f17(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f17 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f17.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f17.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /eventsimulator/index.jsp(374,20) name = key type = null reqTime = true required = false fragment = false deferredValue = false deferredMethod = false expectedTypeName = null methodSignature = null 
    _jspx_th_fmt_005fmessage_005f17.setKey("column.names");
    int _jspx_eval_fmt_005fmessage_005f17 = _jspx_th_fmt_005fmessage_005f17.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f17.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f17);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f17);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f18(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f18 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f18.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f18.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /eventsimulator/index.jsp(375,20) name = key type = null reqTime = true required = false fragment = false deferredValue = false deferredMethod = false expectedTypeName = null methodSignature = null 
    _jspx_th_fmt_005fmessage_005f18.setKey("stream.id");
    int _jspx_eval_fmt_005fmessage_005f18 = _jspx_th_fmt_005fmessage_005f18.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f18.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f18);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f18);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f19(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f19 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f19.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f19.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /eventsimulator/index.jsp(376,20) name = key type = null reqTime = true required = false fragment = false deferredValue = false deferredMethod = false expectedTypeName = null methodSignature = null 
    _jspx_th_fmt_005fmessage_005f19.setKey("stream.attributes");
    int _jspx_eval_fmt_005fmessage_005f19 = _jspx_th_fmt_005fmessage_005f19.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f19.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f19);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f19);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f20(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f20 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f20.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f20.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /eventsimulator/index.jsp(377,20) name = key type = null reqTime = true required = false fragment = false deferredValue = false deferredMethod = false expectedTypeName = null methodSignature = null 
    _jspx_th_fmt_005fmessage_005f20.setKey("event.delay");
    int _jspx_eval_fmt_005fmessage_005f20 = _jspx_th_fmt_005fmessage_005f20.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f20.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f20);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f20);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f21(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f21 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f21.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f21.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /eventsimulator/index.jsp(378,20) name = key type = null reqTime = true required = false fragment = false deferredValue = false deferredMethod = false expectedTypeName = null methodSignature = null 
    _jspx_th_fmt_005fmessage_005f21.setKey("action");
    int _jspx_eval_fmt_005fmessage_005f21 = _jspx_th_fmt_005fmessage_005f21.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f21.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f21);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f21);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f22(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f22 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f22.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f22.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /eventsimulator/index.jsp(384,20) name = key type = null reqTime = true required = false fragment = false deferredValue = false deferredMethod = false expectedTypeName = null methodSignature = null 
    _jspx_th_fmt_005fmessage_005f22.setKey("no.configuration");
    int _jspx_eval_fmt_005fmessage_005f22 = _jspx_th_fmt_005fmessage_005f22.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f22.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f22);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f22);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f23(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f23 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f23.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f23.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /eventsimulator/index.jsp(583,40) name = key type = null reqTime = true required = false fragment = false deferredValue = false deferredMethod = false expectedTypeName = null methodSignature = null 
    _jspx_th_fmt_005fmessage_005f23.setKey("select.the.event.stream");
    int _jspx_eval_fmt_005fmessage_005f23 = _jspx_th_fmt_005fmessage_005f23.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f23.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f23);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f23);
    return false;
  }

  private boolean _jspx_meth_fmt_005fmessage_005f24(javax.servlet.jsp.tagext.JspTag _jspx_th_fmt_005fbundle_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:message
    org.apache.taglibs.standard.tag.rt.fmt.MessageTag _jspx_th_fmt_005fmessage_005f24 = (org.apache.taglibs.standard.tag.rt.fmt.MessageTag) _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.MessageTag.class);
    _jspx_th_fmt_005fmessage_005f24.setPageContext(_jspx_page_context);
    _jspx_th_fmt_005fmessage_005f24.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_fmt_005fbundle_005f0);
    // /eventsimulator/index.jsp(592,68) name = key type = null reqTime = true required = false fragment = false deferredValue = false deferredMethod = false expectedTypeName = null methodSignature = null 
    _jspx_th_fmt_005fmessage_005f24.setKey("no.event.stream.definition");
    int _jspx_eval_fmt_005fmessage_005f24 = _jspx_th_fmt_005fmessage_005f24.doStartTag();
    if (_jspx_th_fmt_005fmessage_005f24.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f24);
      return true;
    }
    _005fjspx_005ftagPool_005ffmt_005fmessage_0026_005fkey_005fnobody.reuse(_jspx_th_fmt_005fmessage_005f24);
    return false;
  }
}
